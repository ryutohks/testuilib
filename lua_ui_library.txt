-- UI Library для Executor/Injector
-- Сохрани это как отдельный файл библиотеки

local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local Colors = {
    Background = Color3.fromRGB(15, 15, 25),
    Secondary = Color3.fromRGB(25, 25, 35),
    Accent = Color3.fromRGB(138, 43, 226),
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(180, 180, 180),
    NavBackground = Color3.fromRGB(20, 20, 30),
    Surface = Color3.fromRGB(30, 30, 40),
    Error = Color3.fromRGB(255, 95, 87),
    Border = Color3.fromRGB(45, 45, 55),
    Shadow = Color3.fromRGB(0, 0, 0)
}

function Library:CreateMain(options)
    local title = options.title or "Window"
    local WindowWidth = options.WindowWidth or 500
    local WindowHeight = options.WindowHeight or 400
    local Theme = options.Theme or Colors
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = options.Name or "UILibrary"
    ScreenGui.Parent = game:GetService("CoreGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    
    local ShadowFrame = Instance.new("Frame")
    ShadowFrame.Parent = ScreenGui
    ShadowFrame.BackgroundColor3 = Theme.Shadow
    ShadowFrame.BackgroundTransparency = 0.7
    ShadowFrame.BorderSizePixel = 0
    ShadowFrame.Position = UDim2.new(0.5, -WindowWidth/2 - 5, 0.5, -WindowHeight/2 - 5)
    ShadowFrame.Size = UDim2.new(0, WindowWidth + 10, 0, WindowHeight + 10)
    
    local ShadowCorner = Instance.new("UICorner")
    ShadowCorner.CornerRadius = UDim.new(0, 12)
    ShadowCorner.Parent = ShadowFrame
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -WindowWidth/2, 0.5, -WindowHeight/2)
    MainFrame.Size = UDim2.new(0, WindowWidth, 0, WindowHeight)
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 12)
    MainCorner.Parent = MainFrame
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = Theme.Surface
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 50)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 12)
    TitleCorner.Parent = TitleBar
    
    local AccentLine = Instance.new("Frame")
    AccentLine.Parent = TitleBar
    AccentLine.BackgroundColor3 = Theme.Accent
    AccentLine.BorderSizePixel = 0
    AccentLine.Position = UDim2.new(0, 15, 1, -2)
    AccentLine.Size = UDim2.new(1, -30, 0, 2)
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Parent = TitleBar
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 15, 0, 0)
    TitleLabel.Size = UDim2.new(0, 300, 1, 0)
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Theme.Text
    TitleLabel.TextSize = 16
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundColor3 = Theme.Error
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(1, -35, 0.5, -12)
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "×"
    CloseButton.TextColor3 = Colors.Text
    CloseButton.TextSize = 18
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 6)
    CloseCorner.Parent = CloseButton
    
    CloseButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = false
        ShadowFrame.Visible = false
    end)
    
    -- Кнопка открытия/закрытия для мобильных
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Parent = ScreenGui
    ToggleButton.BackgroundColor3 = Theme.Accent
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Position = UDim2.new(0, 10, 0, 10)
    ToggleButton.Size = UDim2.new(0, 50, 0, 50)
    ToggleButton.Font = Enum.Font.GothamBold
    ToggleButton.Text = "☰"
    ToggleButton.TextColor3 = Colors.Text
    ToggleButton.TextSize = 24
    ToggleButton.ZIndex = 10
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 12)
    ToggleCorner.Parent = ToggleButton
    
    local isVisible = true
    ToggleButton.MouseButton1Click:Connect(function()
        isVisible = not isVisible
        MainFrame.Visible = isVisible
        ShadowFrame.Visible = isVisible
        
        if isVisible then
            TweenService:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Accent}):Play()
        else
            TweenService:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Error}):Play()
        end
    end)
    
    local NavigationFrame = Instance.new("Frame")
    NavigationFrame.Parent = MainFrame
    NavigationFrame.BackgroundColor3 = Theme.NavBackground
    NavigationFrame.BorderSizePixel = 0
    NavigationFrame.Position = UDim2.new(0, 0, 0, 50)
    NavigationFrame.Size = UDim2.new(0, 150, 1, -50)
    
    local NavPadding = Instance.new("UIPadding")
    NavPadding.Parent = NavigationFrame
    NavPadding.PaddingTop = UDim.new(0, 10)
    NavPadding.PaddingLeft = UDim.new(0, 10)
    NavPadding.PaddingRight = UDim.new(0, 10)
    
    local NavLayout = Instance.new("UIListLayout")
    NavLayout.Parent = NavigationFrame
    NavLayout.Padding = UDim.new(0, 5)
    
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Parent = MainFrame
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Position = UDim2.new(0, 150, 0, 50)
    ContentFrame.Size = UDim2.new(1, -150, 1, -50)
    
    -- ИСПРАВЛЕННОЕ перетаскивание
    local dragging = false
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        local newPosition = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
        MainFrame.Position = newPosition
        ShadowFrame.Position = UDim2.new(
            newPosition.X.Scale,
            newPosition.X.Offset - 5,
            newPosition.Y.Scale,
            newPosition.Y.Offset - 5
        )
    end
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    
    local tabs = {}
    local WindowObject = {}
    
    function WindowObject:CreateTab(name)
        local TabButton = Instance.new("TextButton")
        TabButton.Parent = NavigationFrame
        TabButton.BackgroundColor3 = Theme.Surface
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(1, 0, 0, 35)
        TabButton.Font = Enum.Font.Gotham
        TabButton.Text = "  " .. name
        TabButton.TextColor3 = Theme.TextSecondary
        TabButton.TextSize = 14
        TabButton.TextXAlignment = Enum.TextXAlignment.Left
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 6)
        TabCorner.Parent = TabButton
        
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Parent = ContentFrame
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.ScrollBarThickness = 4
        TabContent.ScrollBarImageColor3 = Theme.Accent
        TabContent.Visible = false
        
        local ContentPadding = Instance.new("UIPadding")
        ContentPadding.Parent = TabContent
        ContentPadding.PaddingTop = UDim.new(0, 10)
        ContentPadding.PaddingLeft = UDim.new(0, 15)
        ContentPadding.PaddingRight = UDim.new(0, 15)
        
        local ContentLayout = Instance.new("UIListLayout")
        ContentLayout.Parent = TabContent
        ContentLayout.Padding = UDim.new(0, 8)
        
        ContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y + 20)
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(tabs) do
                tab.Content.Visible = false
                tab.Button.BackgroundColor3 = Theme.Surface
                tab.Button.TextColor3 = Theme.TextSecondary
            end
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Theme.Accent
            TabButton.TextColor3 = Theme.Text
        end)
        
        tabs[name] = {Button = TabButton, Content = TabContent}
        
        if #tabs == 1 then
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Theme.Accent
            TabButton.TextColor3 = Theme.Text
        end
        
        local TabObject = {Content = TabContent}
        
        function TabObject:CreateSection(options)
            local Section = Instance.new("Frame")
            Section.Parent = TabContent
            Section.BackgroundTransparency = 1
            Section.Size = UDim2.new(1, 0, 0, 30)
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Section
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 4, 0, 4)
            Label.Size = UDim2.new(1, -8, 0, 18)
            Label.Font = Enum.Font.GothamBold
            Label.Text = options.text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 15
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local Divider = Instance.new("Frame")
            Divider.Parent = Section
            Divider.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            Divider.BorderSizePixel = 0
            Divider.Position = UDim2.new(0, 0, 0, 26)
            Divider.Size = UDim2.new(1, 0, 0, 1)
        end
        
        function TabObject:CreateButton(options)
            local Button = Instance.new("Frame")
            Button.Parent = TabContent
            Button.BackgroundColor3 = Colors.Secondary
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, 0, 0, 35)
            
            local Corner = Instance.new("UICorner")
            Corner.CornerRadius = UDim.new(0, 6)
            Corner.Parent = Button
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Button
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.Size = UDim2.new(1, -60, 1, 0)
            Label.Font = Enum.Font.Gotham
            Label.Text = options.text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 14
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local ImageButton = Instance.new("ImageButton")
            ImageButton.Parent = Button
            ImageButton.BackgroundColor3 = Colors.Accent
            ImageButton.BorderSizePixel = 0
            ImageButton.Position = UDim2.new(1, -60, 0.5, -12)
            ImageButton.Size = UDim2.new(0, 50, 0, 24)
            ImageButton.Image = "rbxassetid://16898613613"
            ImageButton.ImageRectSize = Vector2.new(48, 48)
            ImageButton.ImageRectOffset = Vector2.new(771, 710)
            ImageButton.ImageColor3 = Colors.Text
            
            local BtnCorner = Instance.new("UICorner")
            BtnCorner.CornerRadius = UDim.new(0, 8)
            BtnCorner.Parent = ImageButton
            
            ImageButton.MouseButton1Click:Connect(function()
                TweenService:Create(ImageButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(118, 23, 206)}):Play()
                task.wait(0.1)
                TweenService:Create(ImageButton, TweenInfo.new(0.1), {BackgroundColor3 = Colors.Accent}):Play()
                options.callback()
            end)
        end
        
        function TabObject:CreateParagraph(options)
            local Para = Instance.new("Frame")
            Para.Parent = TabContent
            Para.BackgroundColor3 = Colors.Secondary
            Para.BorderSizePixel = 0
            Para.Size = UDim2.new(1, 0, 0, 80)
            
            local Corner = Instance.new("UICorner")
            Corner.CornerRadius = UDim.new(0, 6)
            Corner.Parent = Para
            
            local Title = Instance.new("TextLabel")
            Title.Parent = Para
            Title.BackgroundTransparency = 1
            Title.Position = UDim2.new(0, 10, 0, 10)
            Title.Size = UDim2.new(1, -20, 0, 18)
            Title.Font = Enum.Font.GothamBold
            Title.Text = options.title
            Title.TextColor3 = Colors.Text
            Title.TextSize = 15
            Title.TextXAlignment = Enum.TextXAlignment.Left
            
            local Content = Instance.new("TextLabel")
            Content.Parent = Para
            Content.BackgroundTransparency = 1
            Content.Position = UDim2.new(0, 10, 0, 30)
            Content.Size = UDim2.new(1, -20, 1, -40)
            Content.Font = Enum.Font.Gotham
            Content.Text = string.gsub(options.text, "\\n", "\n")
            Content.TextColor3 = Colors.Text
            Content.TextSize = 13
            Content.TextWrapped = true
            Content.TextXAlignment = Enum.TextXAlignment.Left
            Content.TextYAlignment = Enum.TextYAlignment.Top
            
            return {
                Set = function(self, text)
                    Content.Text = string.gsub(text, "\\n", "\n")
                end
            }
        end
        
        function TabObject:CreateDivider(options)
            local Div = Instance.new("Frame")
            Div.Parent = TabContent
            Div.BackgroundTransparency = 1
            Div.Size = UDim2.new(1, 0, 0, options.height or 10)
        end
        
        function TabObject:CreateInput(options)
            local Input = Instance.new("Frame")
            Input.Parent = TabContent
            Input.BackgroundColor3 = Colors.Secondary
            Input.BorderSizePixel = 0
            Input.Size = UDim2.new(1, 0, 0, 35)
            
            local Corner = Instance.new("UICorner")
            Corner.CornerRadius = UDim.new(0, 6)
            Corner.Parent = Input
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Input
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.Size = UDim2.new(1, -90, 1, 0)
            Label.Font = Enum.Font.Gotham
            Label.Text = options.text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 14
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local TextBox = Instance.new("TextBox")
            TextBox.Parent = Input
            TextBox.BackgroundColor3 = Colors.Border
            TextBox.BorderSizePixel = 0
            TextBox.Position = UDim2.new(1, -80, 0.5, -12)
            TextBox.Size = UDim2.new(0, 70, 0, 24)
            TextBox.Font = Enum.Font.Gotham
            TextBox.PlaceholderText = options.placeholder or ""
            TextBox.Text = ""
            TextBox.TextColor3 = Colors.Text
            TextBox.TextSize = 12
            TextBox.TextXAlignment = Enum.TextXAlignment.Center
            
            local BoxCorner = Instance.new("UICorner")
            BoxCorner.CornerRadius = UDim.new(0, 8)
            BoxCorner.Parent = TextBox
            
            TextBox.FocusLost:Connect(function()
                options.callback(TextBox.Text)
            end)
            
            return {
                Get = function() return TextBox.Text end,
                Set = function(self, val) TextBox.Text = val end
            }
        end
        
        function TabObject:CreateKeyBind(options)
            local KeyBind = Instance.new("Frame")
            KeyBind.Parent = TabContent
            KeyBind.BackgroundColor3 = Colors.Secondary
            KeyBind.BorderSizePixel = 0
            KeyBind.Size = UDim2.new(1, 0, 0, 35)
            
            local Corner = Instance.new("UICorner")
            Corner.CornerRadius = UDim.new(0, 6)
            Corner.Parent = KeyBind
            
            local Label = Instance.new("TextLabel")
            Label.Parent = KeyBind
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.Size = UDim2.new(1, -90, 1, 0)
            Label.Font = Enum.Font.Gotham
            Label.Text = options.text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 14
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local KeyButton = Instance.new("TextButton")
            KeyButton.Parent = KeyBind
            KeyButton.BackgroundColor3 = Colors.Border
            KeyButton.BorderSizePixel = 0
            KeyButton.Position = UDim2.new(1, -75, 0.5, -12)
            KeyButton.Size = UDim2.new(0, 65, 0, 24)
            KeyButton.Font = Enum.Font.Gotham
            KeyButton.Text = options.default or "None"
            KeyButton.TextColor3 = Colors.Text
            KeyButton.TextSize = 12
            
            local BtnCorner = Instance.new("UICorner")
            BtnCorner.CornerRadius = UDim.new(0, 8)
            BtnCorner.Parent = KeyButton
            
            local listening = false
            local currentKey = options.default
            
            KeyButton.MouseButton1Click:Connect(function()
                KeyButton.Text = "..."
                KeyButton.BackgroundColor3 = Colors.Accent
                listening = true
            end)
            
            UserInputService.InputBegan:Connect(function(input)
                if listening and input.UserInputType == Enum.UserInputType.Keyboard then
                    currentKey = input.KeyCode.Name
                    KeyButton.Text = currentKey
                    KeyButton.BackgroundColor3 = Colors.Border
                    listening = false
                    options.callback(currentKey)
                end
            end)
            
            return {
                Get = function() return currentKey end,
                Set = function(self, key) currentKey = key KeyButton.Text = key end
            }
        end
        
        return TabObject
    end
    
    return WindowObject
end

return LibraryundTransparency = 1
        ContentFrame.Position = UDim2.new(0, 150, 0, 50)
        ContentFrame.Size = UDim2.new(1, -150, 1, -50)
        ContentFrame.ZIndex = 3

        -- Делаем окно перетаскиваемым
        local dragging = false
        local dragInput, mousePos, framePos

        TitleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                mousePos = input.Position
                framePos = MainFrame.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        TitleBar.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                local delta = input.Position - mousePos
                MainFrame.Position = UDim2.new(
                    framePos.X.Scale,
                    framePos.X.Offset + delta.X,
                    framePos.Y.Scale,
                    framePos.Y.Offset + delta.Y
                )
                ShadowFrame.Position = UDim2.new(
                    framePos.X.Scale,
                    framePos.X.Offset + delta.X - 5,
                    framePos.Y.Scale,
                    framePos.Y.Offset + delta.Y - 5
                )
            end
        end)

        -- Таблица для хранения вкладок
        local tabs = {}
        local currentTab = nil

        -- Возвращаем объект окна с методами
        return {
            MainFrame = MainFrame,
            NavigationFrame = NavigationFrame,
            ContentFrame = ContentFrame,
            Tabs = tabs,
            CurrentTab = currentTab,
            
            -- Метод для создания вкладки
            CreateTab = function(self, name, icon)
                local TabButton = Instance.new("TextButton")
                TabButton.Name = name .. "TabButton"
                TabButton.Parent = NavigationFrame
                TabButton.BackgroundColor3 = ThemeColors.Surface
                TabButton.BorderSizePixel = 0
                TabButton.Size = UDim2.new(1, 0, 0, 35)
                TabButton.Font = Enum.Font.Gotham
                TabButton.Text = "  " .. name
                TabButton.TextColor3 = ThemeColors.TextSecondary
                TabButton.TextSize = 14
                TabButton.TextXAlignment = Enum.TextXAlignment.Left
                TabButton.ZIndex = 4

                local TabCorner = Instance.new("UICorner")
                TabCorner.CornerRadius = UDim.new(0, 6)
                TabCorner.Parent = TabButton

                -- Контейнер содержимого вкладки
                local TabContent = Instance.new("ScrollingFrame")
                TabContent.Name = name .. "Content"
                TabContent.Parent = ContentFrame
                TabContent.BackgroundTransparency = 1
                TabContent.BorderSizePixel = 0
                TabContent.Size = UDim2.new(1, 0, 1, 0)
                TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
                TabContent.ScrollBarThickness = 4
                TabContent.ScrollBarImageColor3 = ThemeColors.Accent
                TabContent.Visible = false
                TabContent.ZIndex = 3

                local ContentPadding = Instance.new("UIPadding")
                ContentPadding.Parent = TabContent
                ContentPadding.PaddingTop = UDim.new(0, 10)
                ContentPadding.PaddingBottom = UDim.new(0, 10)
                ContentPadding.PaddingLeft = UDim.new(0, 15)
                ContentPadding.PaddingRight = UDim.new(0, 15)

                local ContentLayout = Instance.new("UIListLayout")
                ContentLayout.Parent = TabContent
                ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
                ContentLayout.Padding = UDim.new(0, 8)

                -- Автоматическое обновление размера Canvas
                ContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                    TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y + 20)
                end)

                -- Обработка клика на вкладку
                TabButton.MouseButton1Click:Connect(function()
                    -- Скрываем все вкладки
                    for _, tab in pairs(tabs) do
                        tab.Content.Visible = false
                        tab.Button.BackgroundColor3 = ThemeColors.Surface
                        tab.Button.TextColor3 = ThemeColors.TextSecondary
                    end
                    
                    -- Показываем текущую
                    TabContent.Visible = true
                    TabButton.BackgroundColor3 = ThemeColors.Accent
                    TabButton.TextColor3 = ThemeColors.Text
                    self.CurrentTab = name
                end)

                -- Сохраняем вкладку
                tabs[name] = {
                    Button = TabButton,
                    Content = TabContent
                }

                -- Если это первая вкладка - активируем её
                if #tabs == 1 then
                    TabContent.Visible = true
                    TabButton.BackgroundColor3 = ThemeColors.Accent
                    TabButton.TextColor3 = ThemeColors.Text
                    self.CurrentTab = name
                end

                -- Возвращаем объект вкладки с методами
                return setmetatable({
                    Name = name,
                    Content = TabContent,
                    Button = TabButton
                }, {
                    __index = function(t, k)
                        -- Перенаправляем все методы создания элементов
                        if k == "CreateSection" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateSection(Library, options)
                            end
                        elseif k == "CreateButton" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateButton(Library, options)
                            end
                        elseif k == "CreateParagraph" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateParagraph(Library, options)
                            end
                        elseif k == "CreateDivider" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateDivider(Library, options)
                            end
                        elseif k == "CreateToggle" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateToggle(Library, options)
                            end
                        elseif k == "CreateSlider" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateSlider(Library, options)
                            end
                        elseif k == "CreateInput" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateInput(Library, options)
                            end
                        elseif k == "CreateKeyBind" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateKeyBind(Library, options)
                            end
                        elseif k == "CreateDropdown" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateDropdown(Library, options)
                            end
                        elseif k == "CreateColorPicker" then
                            return function(_, options)
                                options.parent = TabContent
                                return Library.CreateColorPicker(Library, options)
                            end
                        end
                    end
                })
            end
        }
    end,

    -- ==================== СОЗДАНИЕ ВКЛАДКИ ====================
    CreateTab = function(self, name, icon)
        error("line 961: Main GUI must be created first!")
    end,

    -- ==================== СОЗДАНИЕ СЕКЦИИ ====================
    CreateSection = function(self, options)
        local flag = options.flag
        local text = options.text

        local Section = Instance.new("Frame")
        Section.Name = "Section"
        Section.Parent = options.parent
        Section.BackgroundTransparency = 1
        Section.Size = UDim2.new(1, 0, 0, 30)

        local SectionLabel = Instance.new("TextLabel")
        SectionLabel.Parent = Section
        SectionLabel.BackgroundTransparency = 1
        SectionLabel.Position = UDim2.new(0, 4, 0, 4)
        SectionLabel.Size = UDim2.new(1, -8, 0, 18)
        SectionLabel.Font = Enum.Font.GothamBold
        SectionLabel.Text = text
        SectionLabel.TextColor3 = Colors.Text
        SectionLabel.TextSize = 15
        SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
        SectionLabel.TextYAlignment = Enum.TextYAlignment.Center

        local Divider = Instance.new("Frame")
        Divider.Parent = Section
        Divider.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
        Divider.BorderSizePixel = 0
        Divider.Position = UDim2.new(0, 0, 0, 26)
        Divider.Size = UDim2.new(1, 0, 0, 1)

        return {
            Get = function()
                return text
            end,
            Set = function(self, newText)
                SectionLabel.Text = newText
            end,
        }
    end,

    -- ==================== СОЗДАНИЕ ПАРАГРАФА ====================
    CreateParagraph = function(self, options)
        local text = options.text

        local Paragraph = Instance.new("Frame")
        Paragraph.Name = "Paragraph"
        Paragraph.Parent = options.parent
        Paragraph.BackgroundColor3 = Colors.Secondary
        Paragraph.BorderSizePixel = 0
        Paragraph.Size = UDim2.new(1, 0, 0, 60)
        Paragraph:SetAttribute("Flag", options.flag)

        local Corner = Instance.new("UICorner")
        Corner.CornerRadius = UDim.new(0, 6)
        Corner.Parent = Paragraph

        local Title = Instance.new("TextLabel")
        Title.Parent = Paragraph
        Title.BackgroundTransparency = 1
        Title.Position = UDim2.new(0, 10, 0, 10)
        Title.Size = UDim2.new(1, -20, 0, 18)
        Title.Font = Enum.Font.GothamBold
        Title.Text = options.title
        Title.TextColor3 = Colors.Text
        Title.TextSize = 15
        Title.TextXAlignment = Enum.TextXAlignment.Left
        Title.TextYAlignment = Enum.TextYAlignment.Center

        local Content = Instance.new("TextLabel")
        Content.Parent = Paragraph
        Content.BackgroundTransparency = 1
        Content.Position = UDim2.new(0, 10, 0, 30)
        Content.Size = UDim2.new(1, -20, 1, -40)
        Content.Font = Enum.Font.Gotham
        Content.Text = string.gsub(text, "\\n", "\n")
        Content.TextColor3 = Colors.Text
        Content.TextSize = 15
        Content.TextWrapped = true
        Content.TextXAlignment = Enum.TextXAlignment.Left
        Content.TextYAlignment = Enum.TextYAlignment.Top

        -- Автоматическая подстройка размера
        local function updateSize()
            local textService = game:GetService("TextService")
            local textHeight = textService:GetTextSize(
                Content.Text,
                Content.TextSize,
                Content.Font,
                Vector2.new(Content.AbsoluteSize.X, math.huge)
            ).Y
            Paragraph.Size = UDim2.new(1, 0, 0, textHeight + 30 + 10)
            Title.TextSize = Content.TextSize + 1
        end

        Content:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateSize)
        Content:GetPropertyChangedSignal("Text"):Connect(updateSize)
        task.defer(updateSize)

        return {
            Get = function()
                return text
            end,
            Set = function(self, newText)
                Content.Text = newText
                updateSize()
            end,
        }
    end,

    -- ==================== СОЗДАНИЕ КНОПКИ ====================
    CreateButton = function(self, options)
        local flag = options.flag

        local Button = Instance.new("Frame")
        Button.Name = "Button"
        Button.Parent = options.parent
        Button.BackgroundColor3 = Colors.Secondary
        Button.BorderSizePixel = 0
        Button.Size = UDim2.new(1, 0, 0, 35)

        local Corner = Instance.new("UICorner")
        Corner.CornerRadius = UDim.new(0, 6)
        Corner.Parent = Button

        local Label = Instance.new("TextLabel")
        Label.Parent = Button
        Label.BackgroundTransparency = 1
        Label.Position = UDim2.new(0, 10, 0, 0)
        Label.Size = UDim2.new(1, -60, 1, 0)
        Label.Font = Enum.Font.Gotham
        Label.Text = options.text
        Label.TextColor3 = Colors.Text
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left
        Label.TextTruncate = Enum.TextTruncate.AtEnd
        Label.ClipsDescendants = true

        -- Автоматическое уменьшение размера текста при необходимости
        local function adjustTextSize()
            local textService = game:GetService("TextService")
            local availableWidth = Label.AbsoluteSize.X
            Label.TextSize = 10 -- Устанавливаем минимальный размер
        end

        Label:GetPropertyChangedSignal("AbsoluteSize"):Connect(adjustTextSize)
        Label:GetPropertyChangedSignal("Text"):Connect(adjustTextSize)
        task.defer(adjustTextSize)

        -- Кнопка с иконкой
        local ImageButton = Instance.new("ImageButton")
        ImageButton.Parent = Button
        ImageButton.BackgroundColor3 = Colors.Accent
        ImageButton.BorderSizePixel = 0
        ImageButton.Position = UDim2.new(1, -60, 0.5, -12)
        ImageButton.Size = UDim2.new(0, 50, 0, 24)
        ImageButton.Image = "rbxassetid://16898613613"
        ImageButton.ImageRectSize = Vector2.new(48, 48)
        ImageButton.ImageRectOffset = Vector2.new(771, 710)
        ImageButton.ImageColor3 = Colors.Text
        ImageButton.ScaleType = Enum.ScaleType.Fit

        local ButtonCorner = Instance.new("UICorner")
        ButtonCorner.CornerRadius = UDim.new(0, 8)
        ButtonCorner.Parent = ImageButton

        -- Анимация нажатия
        ImageButton.MouseButton1Click:Connect(function()
            local pressTween = TweenService:Create(
                ImageButton,
                TweenInfo.new(0.1),
                {BackgroundColor3 = Color3.fromRGB(118, 23, 206)}
            )
            pressTween:Play()
            
            pressTween.Completed:Connect(function()
                local releaseTween = TweenService:Create(
                    ImageButton,
                    TweenInfo.new(0.1),
                    {BackgroundColor3 = Colors.Accent}
                )
                releaseTween:Play()
            end)
            
            options.callback()
        end)

        return Button
    end,

    -- ==================== СОЗДАНИЕ РАЗДЕЛИТЕЛЯ ====================
    CreateDivider = function(self, options)
        local Divider = Instance.new("Frame")
        Divider.Name = "Divider"
        Divider.BackgroundTransparency = 1
        Divider.BorderSizePixel = 0
        Divider.Size = UDim2.new(1, 0, 0, options.height)
        Divider.Parent = options.parent
        return Divider
    end,

    -- ==================== СОЗДАНИЕ ПЕРЕКЛЮЧАТЕЛЯ ====================
    CreateToggle = function(self, options)
        local parent = options.parent
        local text = options.text
        local flag = options.flag
        local default = options.default
        local callback = options.callback
        error("line 1484: attempt to index nil with 'Enabled'")
    end,

    -- ==================== СОЗДАНИЕ ВЫПАДАЮЩЕГО СПИСКА ====================
    CreateDropdown = function(self, options)
        local parent = options.parent
        local text = options.text
        local flag = options.flag
        local callback = options.callback
        local firstOption = options.options[1]
        error("line 1618: attempt to index nil with 'Enabled'")
    end,

    -- ==================== СОЗДАНИЕ СЛАЙДЕРА ====================
    CreateSlider = function(self, options)
        local min = options.min
        local max = options.max
        local default = options.default
        local callback = options.callback
        
        local HttpService = game:GetService("HttpService")

        local Slider = Instance.new("Frame")
        Slider.Name = "Slider"
        Slider.Parent = options.parent
        Slider.BackgroundColor3 = Colors.Secondary
        Slider.BorderSizePixel = 0
        Slider.Size = UDim2.new(1, 0, 0, 45)
        Slider:SetAttribute("Flag", options.flag)
        Slider:SetAttribute("Value", 0)

        local Corner = Instance.new("UICorner")
        Corner.CornerRadius = UDim.new(0, 6)
        Corner.Parent = Slider

        local Label = Instance.new("TextLabel")
        Label.Parent = Slider
        Label.BackgroundTransparency = 1
        Label.Position = UDim2.new(0, 10, 0, 3)
        Label.Size = UDim2.new(1, -70, 0, 20)
        Label.Font = Enum.Font.Gotham
        Label.Text = options.text
        Label.TextColor3 = Colors.Text
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left
        Label.TextTruncate = Enum.TextTruncate.AtEnd
        Label.ClipsDescendants = true

        -- Автоматическая подстройка размера текста
        local function adjustTextSize()
            Label.TextSize = 10
        end

        Label:GetPropertyChangedSignal("AbsoluteSize"):Connect(adjustTextSize)
        Label:GetPropertyChangedSignal("Text"):Connect(adjustTextSize)
        task.defer(adjustTextSize)

        local ValueLabel = Instance.new("TextLabel")
        ValueLabel.Parent = Slider
        ValueLabel.BackgroundTransparency = 1
        ValueLabel.Position = UDim2.new(1, -60, 0, 3)
        ValueLabel.Size = UDim2.new(0, 50, 0, 20)
        ValueLabel.Font = Enum.Font.Gotham
        
        error("internal 963: invalid argument #2 to 'format' (number expected, got nil)")
    end,

    -- ==================== СОЗДАНИЕ ПОЛЯ ВВОДА ====================
    CreateInput = function(self, options)
        local callback = options.callback

        local Input = Instance.new("Frame")
        Input.Name = "Input"
        Input.Parent = options.parent
        Input.BackgroundColor3 = Colors.Secondary
        Input.BorderSizePixel = 0
        Input.Size = UDim2.new(1, 0, 0, 35)
        Input:SetAttribute("Flag", options.flag)
        Input:SetAttribute("Value", "")

        local Corner = Instance.new("UICorner")
        Corner.CornerRadius = UDim.new(0, 6)
        Corner.Parent = Input

        local Label = Instance.new("TextLabel")
        Label.Parent = Input
        Label.BackgroundTransparency = 1
        Label.Position = UDim2.new(0, 10, 0, 0)
        Label.Size = UDim2.new(1, -90, 1, 0)
        Label.Font = Enum.Font.Gotham
        Label.Text = options.text
        Label.TextColor3 = Colors.Text
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left
        Label.TextTruncate = Enum.TextTruncate.AtEnd
        Label.ClipsDescendants = true

        -- Автоматическая подстройка размера текста
        local function adjustTextSize()
            Label.TextSize = 10
        end

        Label:GetPropertyChangedSignal("AbsoluteSize"):Connect(adjustTextSize)
        Label:GetPropertyChangedSignal("Text"):Connect(adjustTextSize)
        task.defer(adjustTextSize)

        local TextBox = Instance.new("TextBox")
        TextBox.Parent = Input
        TextBox.BackgroundColor3 = Colors.Border
        TextBox.BorderSizePixel = 0
        TextBox.Position = UDim2.new(1, -80, 0.5, -12)
        TextBox.Size = UDim2.new(0, 70, 0, 24)
        TextBox.Font = Enum.Font.Gotham
        TextBox.PlaceholderText = options.placeholder
        TextBox.Text = ""
        TextBox.TextColor3 = Colors.Text
        TextBox.TextSize = 12
        TextBox.TextXAlignment = Enum.TextXAlignment.Center
        TextBox.ClipsDescendants = true

        -- Автоматическая подстройка размера текста в TextBox
        local function adjustBoxTextSize()
            TextBox.TextSize = 10
        end

        TextBox:GetPropertyChangedSignal("AbsoluteSize"):Connect(adjustBoxTextSize)
        TextBox:GetPropertyChangedSignal("Text"):Connect(adjustBoxTextSize)
        task.defer(adjustBoxTextSize)

        local Padding = Instance.new("UIPadding")
        Padding.Parent = TextBox
        Padding.PaddingLeft = UDim.new(0, 5)
        Padding.PaddingRight = UDim.new(0, 5)

        local BoxCorner = Instance.new("UICorner")
        BoxCorner.CornerRadius = UDim.new(0, 8)
        BoxCorner.Parent = TextBox

        -- Обработка потери фокуса
        TextBox.FocusLost:Connect(function()
            Input:SetAttribute("Value", TextBox.Text)
            callback(TextBox.Text)
        end)

        -- Обработка изменения атрибута
        Input:GetAttributeChangedSignal("Value"):Connect(function()
            TextBox.Text = Input:GetAttribute("Value")
            callback(TextBox.Text)
        end)

        return {
            Get = function()
                return TextBox.Text
            end,
            Set = function(self, value)
                TextBox.Text = value
                Input:SetAttribute("Value", value)
                callback(TextBox.Text)
            end,
        }
    end,

    -- ==================== СОЗДАНИЕ ПРИВЯЗКИ КЛАВИШ ====================
    CreateKeyBind = function(self, options)
        local default = options.default
        local callback = options.callback
        
        local HttpService = game:GetService("HttpService")
        local autoLoadData = HttpService:JSONDecode('{"Load":true}')
        local Load = autoLoadData.Load

        local KeyBind = Instance.new("Frame")
        KeyBind.Name = "KeyBind"
        KeyBind.Parent = options.parent
        KeyBind.BackgroundColor3 = Colors.Secondary
        KeyBind.BorderSizePixel = 0
        KeyBind.Size = UDim2.new(1, 0, 0, 35)
        KeyBind:SetAttribute("Flag", options.flag)
        KeyBind:SetAttribute("Value", default)

        local Corner = Instance.new("UICorner")
        Corner.CornerRadius = UDim.new(0, 6)
        Corner.Parent = KeyBind

        local Label = Instance.new("TextLabel")
        Label.Parent = KeyBind
        Label.BackgroundTransparency = 1
        Label.Position = UDim2.new(0, 10, 0, 0)
        Label.Size = UDim2.new(1, -90, 1, 0)
        Label.Font = Enum.Font.Gotham
        Label.Text = options.text
        Label.TextColor3 = Colors.Text
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left
        Label.TextTruncate = Enum.TextTruncate.AtEnd
        Label.ClipsDescendants = true

        -- Автоматическая подстройка размера текста
        local function adjustTextSize()
            Label.TextSize = 10
        end

        Label:GetPropertyChangedSignal("AbsoluteSize"):Connect(adjustTextSize)
        Label:GetPropertyChangedSignal("Text"):Connect(adjustTextSize)
        task.defer(adjustTextSize)

        local KeyButton = Instance.new("TextButton")
        KeyButton.Parent = KeyBind
        KeyButton.BackgroundColor3 = Colors.Border
        KeyButton.BorderSizePixel = 0
        KeyButton.Position = UDim2.new(1, -75, 0.5, -12)
        KeyButton.Size = UDim2.new(0, 65, 0, 24)
        KeyButton.Font = Enum.Font.Gotham
        KeyButton.Text = default
        KeyButton.TextColor3 = Colors.Text
        KeyButton.TextSize = 12
        KeyButton.TextTruncate = Enum.TextTruncate.AtEnd
        KeyButton.ClipsDescendants = true

        -- Автоматическая подстройка размера текста кнопки
        local function adjustButtonTextSize()
            KeyButton.TextSize = 10
        end

        KeyButton:GetPropertyChangedSignal("AbsoluteSize"):Connect(adjustButtonTextSize)
        KeyButton:GetPropertyChangedSignal("Text"):Connect(adjustButtonTextSize)
        task.defer(adjustButtonTextSize)

        local ButtonCorner = Instance.new("UICorner")
        ButtonCorner.CornerRadius = UDim.new(0, 8)
        ButtonCorner.Parent = KeyButton

        -- Обработка нажатия клавиш
        local InputConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            -- Логика обработки нажатий
        end)

        -- Обработка клика на кнопку
        KeyButton.MouseButton1Click:Connect(function()
            KeyButton.Text = "Press any key..."
            KeyButton.BackgroundColor3 = Colors.Accent
            
            local WaitForKey = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                -- Логика ожидания нажатия клавиши
            end)
        end)

        -- Обработка удаления
        KeyBind.AncestryChanged:Connect(function()
            local parent = KeyBind.Parent
            -- Логика при изменении родителя
        end)

        -- Обработка изменения значения
        local currentValue = default
        KeyBind:GetAttributeChangedSignal("Value"):Connect(function()
            currentValue = KeyBind:GetAttribute("Value")
            KeyButton.Text = currentValue
            KeyButton.BackgroundColor3 = Colors.Border
        end)

        return {
            Get = function()
                return currentValue
            end,
            Set = function(self, value)
                KeyBind:SetAttribute("Value", value)
                KeyButton.Text = value
                KeyButton.BackgroundColor3 = Colors.Border
            end,
        }
    end,

    -- ==================== СОЗДАНИЕ ПАЛИТРЫ ЦВЕТОВ ====================
    CreateColorPicker = function(self, options)
        local parent = options.parent
        local text = options.text
        local flag = options.flag
        local default = options.default
        local callback = options.callback
        error("line 2484: attempt to index nil with 'Enabled'")
    end,

    -- ==================== СОЗДАНИЕ УВЕДОМЛЕНИЯ ====================
    CreateNotify = function(self, options)
        local title = options.title
        local description = options.description
        local time = options.time

        local NotificationGui = Instance.new("ScreenGui")
        NotificationGui.Name = "NotificationGui"
        NotificationGui.Parent = game.CoreGui
        NotificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        local ViewportSize = workspace.CurrentCamera.ViewportSize
        local notifWidth = math.min(ViewportSize.X * 0.25, 300)
        local notifX = ViewportSize.X
        
        error("line 2923: attempt to compare table < number")
    end,

    -- ==================== ПОКАЗАТЬ ВКЛАДКУ НАСТРОЕК ====================
    ShowSettingsTab = function(self)
        error("line 830: Main GUI must be created first!")
    end,

    -- ==================== СОЗДАТЬ ВКЛАДКУ НАСТРОЕК ====================
    CreateSettingsTab = function(self)
        error("line 830: Main GUI must be created first!")
    end,

    -- ==================== УДАЛЕНИЕ ====================
    Delete = function(self)
        error("line 3167: attempt to index nil with 'Enabled'")
    end,

    -- ==================== СОХРАНЕНИЕ ====================
    Save = function(self)
        error("line 3124: attempt to index nil with 'Enabled'")
    end,

    -- ==================== ПОЛУЧИТЬ ЗНАЧЕНИЕ ФЛАГА ====================
    GetFlagValue = function(self, flag)
        -- Здесь должна быть логика получения значения флага из конфигурации
        return nil
    end,

    -- ==================== АВТОСОХРАНЕНИЕ/ЗАГРУЗКА ====================
    AutoSaveLoad = function(self, enabled)
        local HttpService = game:GetService("HttpService")
        makefolder("AshLabs")
        
        local saveData = HttpService:JSONEncode({
            Load = true,
        })
        writefile("AshLabs/_GLOBAL.json", saveData)
    end,

    -- ==================== ЗАГРУЗКА ====================
    Load = function(self)
        local HttpService = game:GetService("HttpService")
        -- Здесь должна быть логика загрузки конфигурации
    end,
}
